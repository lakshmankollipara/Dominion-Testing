#include "dominion.h"

int main() {
  int r;
  struct gameState G;
  int k[10] = {mine,tribute,council_room,great_hall,sea_hag,treasure_map,salvager,baron,adventurer,minion};
  initializeGame(2, k, 0, &G);
  r = buyCard(mine, &G);
  r = playCard(10, 4, 2, 4, &G);
  r = endTurn(&G);
  r = endTurn(&G);
  r = playCard(5, 2, 2, 2, &G);
  r = playCard(3, 0, 9, 6, &G);
  r = playCard(2, 10, 9, 1, &G);
  r = endTurn(&G);
  r = buyCard(11, &G);
  r = buyCard(village, &G);
  r = buyCard(16, &G);
  r = endTurn(&G);
  r = endTurn(&G);
  r = buyCard(silver, &G);
  r = endTurn(&G);
  r = playCard(7, 7, 4, 4, &G);
  r = playCard(8, 5, 4, 5, &G);
  r = endTurn(&G);
  r = endTurn(&G);
  r = buyCard(11, &G);
  r = endTurn(&G);
  r = playCard(10, 8, 5, 9, &G);
  r = endTurn(&G);
  r = playCard(10, 6, 5, 2, &G);
  r = playCard(10, 0, 8, 9, &G);
  r = buyCard(14, &G);
  r = playCard(4, 0, 9, 6, &G);
  r = endTurn(&G);
  r = playCard(5, 3, 3, 5, &G);
  r = playCard(6, 5, 0, 2, &G);
  r = endTurn(&G);
  r = playCard(9, 8, 8, 8, &G);
  r = endTurn(&G);
  r = buyCard(mine, &G);
  r = endTurn(&G);
  r = buyCard(silver, &G);
  r = endTurn(&G);
  r = playCard(3, 0, 1, 5, &G);
  r = endTurn(&G);
  r = endTurn(&G);
  r = buyCard(silver, &G);
  r = endTurn(&G);
  r = playCard(0, 4, 4, 2, &G);
  r = endTurn(&G);
  r = buyCard(village, &G);
  r = buyCard(silver, &G);
  r = endTurn(&G);
  r = endTurn(&G);
  r = buyCard(silver, &G);
  r = buyCard(6, &G);
  r = buyCard(6, &G);
  r = playCard(4, 6, 3, 6, &G);
  r = endTurn(&G);
  r = endTurn(&G);
  r = buyCard(outpost, &G);
  r = endTurn(&G);
  r = buyCard(sea_hag, &G);
  r = endTurn(&G);
  r = buyCard(silver, &G);
  r = buyCard(4, &G);
  r = buyCard(14, &G);
  r = playCard(3, 2, 7, 4, &G);
  r = endTurn(&G);
  r = endTurn(&G);
  r = playCard(3, 5, 3, 9, &G);
  r = buyCard(silver, &G);
  r = endTurn(&G);
  r = endTurn(&G);
  r = buyCard(great_hall, &G);
  r = buyCard(9, &G);
  r = buyCard(gold, &G);
  r = endTurn(&G);
  r = buyCard(silver, &G);
  r = endTurn(&G);
  r = buyCard(silver, &G);
  r = buyCard(10, &G);
  r = playCard(3, 9, 6, 10, &G);
  r = buyCard(silver, &G);
  r = playCard(1, 0, 0, 9, &G);
  r = buyCard(remodel, &G);
  r = buyCard(silver, &G);
  r = playCard(2, 0, 2, 9, &G);
  r = playCard(10, 5, 3, 8, &G);
  r = buyCard(silver, &G);
  r = buyCard(silver, &G);
  r = endTurn(&G);
  r = buyCard(silver, &G);
  r = endTurn(&G);
  r = buyCard(silver, &G);
  r = endTurn(&G);
  r = endTurn(&G);
  r = endTurn(&G);
  r = buyCard(silver, &G);
  r = buyCard(silver, &G);
  r = buyCard(sea_hag, &G);
  r = playCard(1, 7, 0, 0, &G);
  r = buyCard(silver, &G);
  r = playCard(4, 3, 0, 10, &G);
  r = buyCard(great_hall, &G);
  r = playCard(10, 5, 7, 7, &G);
  printf("TEST SUCCESSFULLY COMPLETED.\n");
  return 0;
}
